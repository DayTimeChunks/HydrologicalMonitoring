breaks=c(0, 1, 2, 3 , 4 ,5),
expression(paste({Delta~delta}^"13","C", ' (\u2030)')),
sec.axis = sec_axis(trans = ~ (1-((1000 + d13Co + .)/(1000+d13Co))^(1000/epsilon_field))*100 ,
name = element_blank(),
#name = "Degradation (%)",
breaks=c(20, 40, 60, 70, 80, 85, 90, 95) )# breaks=seq(20, 120, 15))
)  +
scale_color_manual(name= "Source",
values = c("#B79F00", "#F8766D", "#00BFC4", "#C77CFF", "#00BA38"
# c("black", "#F8766D", "#00BFC4", "#DE8C00", "#00BA38"
#  "black", "#D55E00",  "#00BFC4",  "#B79F00", "#00BA38"
# Bulk, North, outlet, South, Valley
),
breaks=c("Bulk", "North" , "Valley" ,"South",  "Outlet"),
labels=c("Bulk", "North" , "Valley" ,"South",  "Outlet")
) +
scale_size_continuous(range = c(1, 6), breaks= c(0, 50, 100, 150, 200, 300), limits = c(0, 300)) +
# scale_size_continuous(range = c(1, 3)) +
guides(col = guide_legend(order = 1,
#title=expression("Source"),
#title.vjust = -1,
nrow = 2,
title.position = "top",
keyheight = 1.5
),
shape=guide_legend(title=("Type"),
order = 2,
nrow=2,
title.position = "top",
keyheight = 1.5, title.vjust = NULL, label.vjust = NULL
),
size = guide_legend(order = 3,
#title=expression("Mean Discharge"),
title=expression("Mean Discharge (" ~m^3 / h~")" ),
nrow=2,
title.position = "top"
# title.vjust = .26
#keyheight = 0,
#label.vjust = 0
)) +
annotate("rect", xmin=mindate, xmax=maxdate, ymin=0, ymax=propagatedError, alpha=0.2)
#ggplotly(wsALL_field)
wsALL_field
#wsALL_lab
#wsALL_field
#wsPlot
# ggsave(wsALL, filename = "WaterSoilvsTime.png", width = 8, height = 5, units = "in", scale = 1)
# ggsave(wsALL, filename = "WaterBulkvsTime.png", width = 8, height = 5, units = "in", scale = 1)
wsALL_field_noLeg <- wsALL_field + theme(legend.position='none')
wsALL_lab_noLeg <- wsALL_lab + theme(legend.position='none')
wsAll_field_Leg  <- get_legend(wsALL_field)
labely1 = expression(epsilon ["field"])
labely2 = expression(epsilon ["lab"])
label <- substitute(paste(epsilon, " = ", epsilon_f, ", Field", epsilon, " = " , epsilon_l),
list(epsilon_f = signif(epsilon_field, 2), epsilon_l = signif(epsilon_lab, 2) ))
label2 <- substitute(paste(epsilon ["field"] , " = ", epsilon_f, " \u00B1 ", "0.53" ,"\u2030"),
list(epsilon_f = signif(epsilon_field, 3)))
label3 <- substitute(paste(epsilon ["lab"] , " = ", epsilon_l, " \u00B1 ", "0.47" ,"\u2030"),
list(epsilon_l = signif(epsilon_lab, 3)))
# adding label via ggdraw, in the ggdraw coordinates
wsALL <- ggdraw() +
draw_plot(wsALL_lab_noLeg, x=0, y = 0.15, width = 1, height = 0.82) + # bottom
draw_plot(wsALL_field_noLeg, x=0, y=.15, width = 0.945, height = .82) + # top
draw_label(label2, x= .886, y = .10, size = 15) + # Epsilon field (bottom)
draw_label(label3, x= .89, y = .05, size = 15) + # Epsilon lab (bottom)
draw_label(labely1 , x= .90, y = .98, size = 14) + # Epsilon field (top)
draw_label(labely2 , x= .95, y = .98, size = 14) + # Epsilon lab (top)
draw_plot(wsAll_field_Leg, x=0.2, y=0.0, width = 0.50, height = 0.15)
wsALL
# ggsave(wsALL, filename = "images/WaterSoilvsTime.png", width = 8, height = 5, units = "in", scale = 1)
SAVE = T
PC = F
if (SAVE){
if (PC) {
# cairo and ggdraw having issues.. works fine on MAC though
ggsave(wsALL,
filename = "D:/Documents/these_pablo/WriteUp/Alteck_PNAS_LaTeX/images/CatchOutlet.pdf",
device= pdf, dpi = 600,  scale = 1, # )# ,
width = 11.4, height = 6.4)
} else {
ggsave(wsALL,
filename = "/Users/DayTightChunks/Documents/PhD/Writeups/PNAS/Alteck_PNAS_LaTeX/images/CatchOutlet.pdf",
device=cairo_pdf, dpi = 600,  scale = 1, # )# ,
width = 11.4, height = 6.4)
}
}
#install.packages("extrafont")
#library(extrafont)
View(ajTidy)
ggplot(data = wstidier2, aes(x = Date, y = measure, group = Source) )+
geom_errorbar(data=subset(wstidier2, Source == 'Bulk'), limits_DdC, size=0.2) +
geom_errorbar(data=subset(wstidier2, Source == 'South'
| Source == 'North'
| Source == 'Valley'
), limits_DdC, size=0.1) +
geom_errorbar(data=subset(wstidier2, Source == 'Outlet'), limits_DdC) +
geom_point(data=subset(wstidier2, (Source == 'South'
| Source == 'North'
| Source == 'Valley'
)
# & Date > as.POSIXct('2016-05-14 08:04:00')
),
aes(shape = Type,
colour = Source)) +
geom_point(data=subset(wstidier2, Source == 'Outlet'), aes(shape = Type, colour = Source, size = Qmean)) +
geom_point(data=subset(wstidier2, Source == 'Bulk'), aes(shape = Type, colour = Source)) +
# Water
stat_smooth(data=subset(wstidier2,
(Source == "Outlet"
# & Event > 1
& Type == "Dissolved (Outlet)")),
method = "lm", formula = y ~ poly(x, 2), se = F, aes(colour = 'Outlet'), alpha = 0.2, size=0.2) +
# North
stat_smooth(data=subset(wstidier2,
(Source == "Bulk" )), #| Source == "South" )),
method = "lm", formula = y ~ poly(x, 2), se = F, aes(colour = 'Bulk'), alpha = 0.2, size=0.2) +
#stat_smooth(data=subset(wstidier2,
#                        (Source == "South")),
#            method = "lm", formula = y ~ poly(x, 2), se = T, aes(colour = 'South'), alpha = 0.2, size=0.2) +
theme_bw() +
scale_x_datetime(breaks = date_breaks("1 month"), labels = date_format("%b %d")) +
#scale_x_datetime(breaks = date_breaks("2 weeks"), labels = date_format("%b %d")) +
theme(text = element_text(size=17),
legend.position="top"
axis.title.x = element_blank()
wsALL_lab <- ggplot(data = wstidier2, aes(x = Date, y = measure, group = Source) )+
geom_errorbar(data=subset(wstidier2, Source == 'Bulk'), limits_DdC, size=0.2) +
geom_errorbar(data=subset(wstidier2, Source == 'South'
| Source == 'North'
| Source == 'Valley'
), limits_DdC, size=0.1) +
geom_errorbar(data=subset(wstidier2, Source == 'Outlet'), limits_DdC) +
geom_point(data=subset(wstidier2, (Source == 'South'
| Source == 'North'
| Source == 'Valley'
)
# & Date > as.POSIXct('2016-05-14 08:04:00')
),
aes(shape = Type,
colour = Source)) +
geom_point(data=subset(wstidier2, Source == 'Outlet'), aes(shape = Type, colour = Source, size = Qmean)) +
geom_point(data=subset(wstidier2, Source == 'Bulk'), aes(shape = Type, colour = Source)) +
# Water
stat_smooth(data=subset(wstidier2,
(Source == "Outlet"
# & Event > 1
& Type == "Dissolved (Outlet)")),
method = "lm", formula = y ~ poly(x, 2), se = F, aes(colour = 'Outlet'), alpha = 0.2, size=0.2) +
# North
stat_smooth(data=subset(wstidier2,
(Source == "Bulk" )), #| Source == "South" )),
method = "lm", formula = y ~ poly(x, 2), se = F, aes(colour = 'Bulk'), alpha = 0.2, size=0.2) +
#stat_smooth(data=subset(wstidier2,
#                        (Source == "South")),
#            method = "lm", formula = y ~ poly(x, 2), se = T, aes(colour = 'South'), alpha = 0.2, size=0.2) +
theme_bw() +
scale_x_datetime(breaks = date_breaks("1 month"), labels = date_format("%b %d")) +
#scale_x_datetime(breaks = date_breaks("2 weeks"), labels = date_format("%b %d")) +
theme(text = element_text(size=17),
legend.position="top",
axis.title.x = element_blank()
# axis.text.x=element_text(angle = 45, hjust = 1)
) +
# geom_smooth(data=subset(ws, Source != "Outlet"), method = "lm", formula = y ~ poly(x, 2)) +
xlab("Date") +
#ylab(expression(paste({Delta~delta}^"13","C", ' (\u2030)'))) +
scale_y_continuous(
breaks=c(0, 1, 2, 3 , 4 ,5),
expression(paste({Delta~delta}^"13","C", ' (\u2030)')),
sec.axis = sec_axis(trans = ~ (1-((1000 + d13Co + .)/(1000+d13Co))^(1000/epsilon_lab))*100 ,
name = "Degradation (%)",
#name = element_blank(),
breaks=c(20, 40, 60, 70, 80, 85, 90, 95) )# breaks=seq(20, 120, 15))
)  +
scale_color_manual(name= "Source",
# Actual order:
# Bulk, North, Outlet, South, Valley
values = c("#B79F00", "#F8766D", "#00BFC4", "#C77CFF", "#00BA38"
# working solution:
#c("black", "#F8766D", "#00BFC4", "#DE8C00", "#00BA38"
#"black", "#D55E00",  "#00BFC4",  "#B79F00", "#00BA38"
# Bulk, North, outlet, South, Valley
#"#D55E00", "darkgreen", "dodgerblue"
),
breaks=c("Bulk", "North" , "Valley" ,"South",  "Outlet"),
labels=c("Bulk", "North" , "Valley" ,"South",  "Outlet")
) +
scale_size_continuous(range = c(1, 6), breaks= c(0, 50, 100, 150, 200, 300), limits = c(0, 300))+
annotate("rect", xmin=mindate, xmax=maxdate, ymin=0, ymax=propagatedError, alpha=0.2)
# scale_size_continuous(range = c(1, 3))
#
# Reds
# gold = "#B79F00"
# red-pink  = "#F8766D"
# "firebrick1",
# 'yellow', "orange1","red",
# pink = "#F564E3"
# Mono
# "gray35", "ghostwhite", 'gray99'
# Greens
# 'darkgreen','darkolivegreen3','darkseagreen3','darkseagreen1'
# dark green = "chartreuse4"
# darkish freen = "#00BA38"
# Blues
# purple = "blueviolet"
# "dodgerblue", "#00BFC4" (light blue), "#619CFF" (sharp blue),
#  "deepskyblue"
wsALL_lab
wsALL_lab <- ggplot(data = wstidier2, aes(x = Date, y = measure, group = Source) )+
geom_errorbar(data=subset(wstidier2, Source == 'Bulk'), limits_DdC, size=0.2) +
geom_errorbar(data=subset(wstidier2, Source == 'South'
| Source == 'North'
| Source == 'Valley'
), limits_DdC, size=0.1) +
geom_errorbar(data=subset(wstidier2, Source == 'Outlet'), limits_DdC) +
geom_point(data=subset(wstidier2, (Source == 'South'
| Source == 'North'
| Source == 'Valley'
)
# & Date > as.POSIXct('2016-05-14 08:04:00')
),
aes(shape = Type,
colour = Source)) +
geom_point(data=subset(wstidier2, Source == 'Outlet'), aes(shape = Type, colour = Source, size = Qmean)) +
geom_point(data=subset(wstidier2, Source == 'Bulk'), aes(shape = Type, colour = Source)) +
# Water
stat_smooth(data=subset(wstidier2,
(Source == "Outlet"
# & Event > 1
& Type == "Dissolved (Outlet)")),
method = "lm", formula = y ~ poly(x, 2), se = F, aes(colour = 'Outlet'), alpha = 0.2, size=0.2) +
# North
stat_smooth(data=subset(wstidier2,
(Source == "Bulk" )), #| Source == "South" )),
method = "lm", formula = y ~ poly(x, 2), se = F, aes(colour = 'Bulk'), alpha = 0.2, size=0.2) +
#stat_smooth(data=subset(wstidier2,
#                        (Source == "South")),
#            method = "lm", formula = y ~ poly(x, 2), se = T, aes(colour = 'South'), alpha = 0.2, size=0.2) +
theme_bw() +
scale_x_datetime(breaks = date_breaks("2 months"), labels = date_format("%b %d")) +
#scale_x_datetime(breaks = date_breaks("2 weeks"), labels = date_format("%b %d")) +
theme(text = element_text(size=17),
legend.position="top"
#axis.title.x = element_blank()
# axis.text.x=element_text(angle = 45, hjust = 1)
) +
# geom_smooth(data=subset(ws, Source != "Outlet"), method = "lm", formula = y ~ poly(x, 2)) +
xlab("Date") +
#ylab(expression(paste({Delta~delta}^"13","C", ' (\u2030)'))) +
scale_y_continuous(
breaks=c(0, 1, 2, 3 , 4 ,5),
expression(paste({Delta~delta}^"13","C", ' (\u2030)')),
sec.axis = sec_axis(trans = ~ (1-((1000 + d13Co + .)/(1000+d13Co))^(1000/epsilon_lab))*100 ,
name = "Degradation (%)",
#name = element_blank(),
breaks=c(20, 40, 60, 70, 80, 85, 90, 95) )# breaks=seq(20, 120, 15))
)  +
scale_color_manual(name= "Source",
# Actual order:
# Bulk, North, Outlet, South, Valley
values = c("#B79F00", "#F8766D", "#00BFC4", "#C77CFF", "#00BA38"
# working solution:
#c("black", "#F8766D", "#00BFC4", "#DE8C00", "#00BA38"
#"black", "#D55E00",  "#00BFC4",  "#B79F00", "#00BA38"
# Bulk, North, outlet, South, Valley
#"#D55E00", "darkgreen", "dodgerblue"
),
breaks=c("Bulk", "North" , "Valley" ,"South",  "Outlet"),
labels=c("Bulk", "North" , "Valley" ,"South",  "Outlet")
) +
scale_size_continuous(range = c(1, 6), breaks= c(0, 50, 100, 150, 200, 300), limits = c(0, 300))+
annotate("rect", xmin=mindate, xmax=maxdate, ymin=0, ymax=propagatedError, alpha=0.2)
# scale_size_continuous(range = c(1, 3))
#
# Reds
# gold = "#B79F00"
# red-pink  = "#F8766D"
# "firebrick1",
# 'yellow', "orange1","red",
# pink = "#F564E3"
# Mono
# "gray35", "ghostwhite", 'gray99'
# Greens
# 'darkgreen','darkolivegreen3','darkseagreen3','darkseagreen1'
# dark green = "chartreuse4"
# darkish freen = "#00BA38"
# Blues
# purple = "blueviolet"
# "dodgerblue", "#00BFC4" (light blue), "#619CFF" (sharp blue),
#  "deepskyblue"
wsALL_lab
wsALL_lab <- ggplot(data = wstidier2, aes(x = Date, y = measure, group = Source) )+
geom_errorbar(data=subset(wstidier2, Source == 'Bulk'), limits_DdC, size=0.2) +
geom_errorbar(data=subset(wstidier2, Source == 'South'
| Source == 'North'
| Source == 'Valley'
), limits_DdC, size=0.1) +
geom_errorbar(data=subset(wstidier2, Source == 'Outlet'), limits_DdC) +
geom_point(data=subset(wstidier2, (Source == 'South'
| Source == 'North'
| Source == 'Valley'
)
# & Date > as.POSIXct('2016-05-14 08:04:00')
),
aes(shape = Type,
colour = Source)) +
geom_point(data=subset(wstidier2, Source == 'Outlet'), aes(shape = Type, colour = Source, size = Qmean)) +
geom_point(data=subset(wstidier2, Source == 'Bulk'), aes(shape = Type, colour = Source)) +
# Water
stat_smooth(data=subset(wstidier2,
(Source == "Outlet"
# & Event > 1
& Type == "Dissolved (Outlet)")),
method = "lm", formula = y ~ poly(x, 2), se = F, aes(colour = 'Outlet'), alpha = 0.2, size=0.2) +
# North
stat_smooth(data=subset(wstidier2,
(Source == "Bulk" )), #| Source == "South" )),
method = "lm", formula = y ~ poly(x, 2), se = F, aes(colour = 'Bulk'), alpha = 0.2, size=0.2) +
#stat_smooth(data=subset(wstidier2,
#                        (Source == "South")),
#            method = "lm", formula = y ~ poly(x, 2), se = T, aes(colour = 'South'), alpha = 0.2, size=0.2) +
theme_bw() +
scale_x_datetime(breaks = date_breaks("3 months"), labels = date_format("%b %d")) +
#scale_x_datetime(breaks = date_breaks("2 weeks"), labels = date_format("%b %d")) +
theme(text = element_text(size=17),
legend.position="top"
#axis.title.x = element_blank()
# axis.text.x=element_text(angle = 45, hjust = 1)
) +
# geom_smooth(data=subset(ws, Source != "Outlet"), method = "lm", formula = y ~ poly(x, 2)) +
xlab("Date") +
#ylab(expression(paste({Delta~delta}^"13","C", ' (\u2030)'))) +
scale_y_continuous(
breaks=c(0, 1, 2, 3 , 4 ,5),
expression(paste({Delta~delta}^"13","C", ' (\u2030)')),
sec.axis = sec_axis(trans = ~ (1-((1000 + d13Co + .)/(1000+d13Co))^(1000/epsilon_lab))*100 ,
name = "Degradation (%)",
#name = element_blank(),
breaks=c(20, 40, 60, 70, 80, 85, 90, 95) )# breaks=seq(20, 120, 15))
)  +
scale_color_manual(name= "Source",
# Actual order:
# Bulk, North, Outlet, South, Valley
values = c("#B79F00", "#F8766D", "#00BFC4", "#C77CFF", "#00BA38"
# working solution:
#c("black", "#F8766D", "#00BFC4", "#DE8C00", "#00BA38"
#"black", "#D55E00",  "#00BFC4",  "#B79F00", "#00BA38"
# Bulk, North, outlet, South, Valley
#"#D55E00", "darkgreen", "dodgerblue"
),
breaks=c("Bulk", "North" , "Valley" ,"South",  "Outlet"),
labels=c("Bulk", "North" , "Valley" ,"South",  "Outlet")
) +
scale_size_continuous(range = c(1, 6), breaks= c(0, 50, 100, 150, 200, 300), limits = c(0, 300))+
annotate("rect", xmin=mindate, xmax=maxdate, ymin=0, ymax=propagatedError, alpha=0.2)
wsALL_lab
mindate = as.POSIXct("2016-03-28 00:04:00" , tz = "EST") # min(wstidier2$Date)
maxdate = as.POSIXct("2016-06-27 00:01:00", tz = "EST")
wsALL_field <- ggplot(data = wstidier2, aes(x = Date, y = measure, group = Source) )+
# Dissolved (Outlet) trend
stat_smooth(data=subset(wstidier2,
(Source == "Outlet"
# & Event > 1
& Type == "Dissolved (Outlet)")),
method = "lm", formula = y ~ poly(x, 2), se = F, aes(colour = 'Outlet'), alpha = 0.9, size=0.2) +
# Bulk trend
stat_smooth(data=subset(wstidier2,
(Source == "Bulk" )), #| Source == "South" )),
method = "lm", formula = y ~ poly(x, 2), se = F, aes(colour = 'Bulk'), alpha = 0.9, size=0.2) +
# Error bars
geom_errorbar(data=subset(wstidier2, Source == 'Bulk'), limits_DdC, size=0.2) +
geom_errorbar(data=subset(wstidier2, Source == 'South'
| Source == 'North'
| Source == 'Valley'
), limits_DdC, size=0.1) +
geom_errorbar(data=subset(wstidier2, Source == 'Outlet'), limits_DdC) +
# Data points
geom_point(data=subset(wstidier2, Source == 'Bulk'), aes(shape = Type, colour = Source), size=3) +
geom_point(data=subset(wstidier2, (Source == 'South'
| Source == 'North'
| Source == 'Valley'
)), aes(shape = Type, colour = Source), size=2) +
geom_point(data=subset(wstidier2, Source == 'Outlet'), aes(shape = Type, colour = Source, size = Qmean)) +
theme_bw() +
# Applications
annotate("text", x = as.POSIXct('2016-03-28 08:04:00'), y = 0,
label = as.character(expression(paste( "+"))), parse = T, size = 6.0) +
annotate("text", x = as.POSIXct('2016-04-05 00:04:00'), y = 0,
label = as.character(expression(paste( "+"))), parse = T, size = 6.0) +
annotate("text", x = as.POSIXct('2016-04-13 08:04:00'), y = 0,
label = as.character(expression(paste( "+"))), parse = T, size = 6.0) +
annotate("text", x = as.POSIXct('2016-05-25 08:04:00'), y = 0,
label = as.character(expression(paste( "+"))), parse = T, size = 6.0) +
# Title applics
annotate("text", x = as.POSIXct('2016-04-05 08:04:00'), y = 4.5,
label = as.character(expression(paste( "+"))), parse = T, size = 6.0) +
annotate("text", x = as.POSIXct('2016-04-12 08:04:00'), y = 4.5,
label = as.character(expression(paste(" Applications"))), parse = T, size = 5.0) +
scale_x_datetime(breaks = date_breaks("2 weeks"), labels = date_format("%b %d")) +
#scale_x_datetime(breaks = date_breaks("1 month"), labels = date_format("%b %d")) +
theme(text = element_text(size=17),
legend.position="top"
# axis.title.x = element_blank()
# axis.text.x=element_text(angle = 45, hjust = 1)
) +
xlab("Date") +
#ylab(expression(paste({Delta~delta}^"13","C", ' (\u2030)'))) +
scale_y_continuous(
breaks=c(0, 1, 2, 3 , 4 ,5),
expression(paste({Delta~delta}^"13","C", ' (\u2030)')),
sec.axis = sec_axis(trans = ~ (1-((1000 + d13Co + .)/(1000+d13Co))^(1000/epsilon_field))*100 ,
name = element_blank(),
#name = "Degradation (%)",
breaks=c(20, 40, 60, 70, 80, 85, 90, 95) )# breaks=seq(20, 120, 15))
)  +
scale_color_manual(name= "Source",
values = c("#B79F00", "#F8766D", "#00BFC4", "#C77CFF", "#00BA38"
# c("black", "#F8766D", "#00BFC4", "#DE8C00", "#00BA38"
#  "black", "#D55E00",  "#00BFC4",  "#B79F00", "#00BA38"
# Bulk, North, outlet, South, Valley
),
breaks=c("Bulk", "North" , "Valley" ,"South",  "Outlet"),
labels=c("Bulk", "North" , "Valley" ,"South",  "Outlet")
) +
scale_size_continuous(range = c(1, 6), breaks= c(0, 50, 100, 150, 200, 300), limits = c(0, 300)) +
# scale_size_continuous(range = c(1, 3)) +
guides(col = guide_legend(order = 1,
#title=expression("Source"),
#title.vjust = -1,
nrow = 2,
title.position = "top",
keyheight = 1.5
),
shape=guide_legend(title=("Type"),
order = 2,
nrow=2,
title.position = "top",
keyheight = 1.5, title.vjust = NULL, label.vjust = NULL
),
size = guide_legend(order = 3,
#title=expression("Mean Discharge"),
title=expression("Mean Discharge (" ~m^3 / h~")" ),
nrow=2,
title.position = "top"
# title.vjust = .26
#keyheight = 0,
#label.vjust = 0
)) +
annotate("rect", xmin=mindate, xmax=maxdate, ymin=0, ymax=propagatedError, alpha=0.2)
#ggplotly(wsALL_field)
wsALL_field
#wsALL_lab
#wsALL_field
#wsPlot
# ggsave(wsALL, filename = "WaterSoilvsTime.png", width = 8, height = 5, units = "in", scale = 1)
# ggsave(wsALL, filename = "WaterBulkvsTime.png", width = 8, height = 5, units = "in", scale = 1)
wsALL_field_noLeg <- wsALL_field + theme(legend.position='none')
wsALL_lab_noLeg <- wsALL_lab + theme(legend.position='none')
wsAll_field_Leg  <- get_legend(wsALL_field)
labely1 = expression(epsilon ["field"])
labely2 = expression(epsilon ["lab"])
label <- substitute(paste(epsilon, " = ", epsilon_f, ", Field", epsilon, " = " , epsilon_l),
list(epsilon_f = signif(epsilon_field, 2), epsilon_l = signif(epsilon_lab, 2) ))
label2 <- substitute(paste(epsilon ["field"] , " = ", epsilon_f, " \u00B1 ", "0.53" ,"\u2030"),
list(epsilon_f = signif(epsilon_field, 3)))
label3 <- substitute(paste(epsilon ["lab"] , " = ", epsilon_l, " \u00B1 ", "0.47" ,"\u2030"),
list(epsilon_l = signif(epsilon_lab, 3)))
# adding label via ggdraw, in the ggdraw coordinates
wsALL <- ggdraw() +
draw_plot(wsALL_lab_noLeg, x=0, y = 0.15, width = 1, height = 0.82) + # bottom
draw_plot(wsALL_field_noLeg, x=0, y=.15, width = 0.945, height = .82) + # top
draw_label(label2, x= .886, y = .10, size = 15) + # Epsilon field (bottom)
draw_label(label3, x= .89, y = .05, size = 15) + # Epsilon lab (bottom)
draw_label(labely1 , x= .90, y = .98, size = 14) + # Epsilon field (top)
draw_label(labely2 , x= .95, y = .98, size = 14) + # Epsilon lab (top)
draw_plot(wsAll_field_Leg, x=0.2, y=0.0, width = 0.50, height = 0.15)
wsALL
# ggsave(wsALL, filename = "images/WaterSoilvsTime.png", width = 8, height = 5, units = "in", scale = 1)
SAVE = F
PC = F
if (SAVE){
if (PC) {
# cairo and ggdraw having issues.. works fine on MAC though
ggsave(wsALL,
filename = "D:/Documents/these_pablo/WriteUp/Alteck_PNAS_LaTeX/images/CatchOutlet.pdf",
device= pdf, dpi = 600,  scale = 1, # )# ,
width = 11.4, height = 6.4)
} else {
ggsave(wsALL,
filename = "/Users/DayTightChunks/Documents/PhD/Writeups/PNAS/Alteck_PNAS_LaTeX/images/CatchOutlet.pdf",
device=cairo_pdf, dpi = 600,  scale = 1, # )# ,
width = 11.4, height = 6.4)
}
}
#install.packages("extrafont")
#library(extrafont)
SAVE = T
PC = F
if (SAVE){
if (PC) {
# cairo and ggdraw having issues.. works fine on MAC though
ggsave(wsALL,
filename = "D:/Documents/these_pablo/WriteUp/Alteck_PNAS_LaTeX/images/CatchOutlet.pdf",
device= pdf, dpi = 600,  scale = 1, # )# ,
width = 11.4, height = 6.4)
} else {
ggsave(wsALL,
filename = "/Users/DayTightChunks/Documents/PhD/Writeups/PNAS/Alteck_PNAS_LaTeX/images/CatchOutlet.pdf",
device=cairo_pdf, dpi = 600,  scale = 1, # )# ,
width = 11.4, height = 6.4)
}
}
