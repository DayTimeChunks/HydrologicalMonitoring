#ylab(expression(paste({delta}^"13","C", ' \211'))) +
ylab(expression(paste({delta}^"13","C", ' (\u2030)'))) +
scale_y_continuous(breaks=seq(-34,-21,2)) +
geom_hline(yintercept = -31.21, color = "dodgerblue4", linetype = "dotted") +
geom_hline(yintercept = -30.71, color = "dodgerblue3", linetype = "dotted") +
geom_hline(yintercept = -31.71, color = "dodgerblue3", linetype = "dotted") +
annotate("text", x = as.POSIXct('2016-04-05 22:04:00'), y = -22.5, label = lb1a, parse = T, size = 3.0) +
annotate("text", x = as.POSIXct('2016-04-05 22:04:00'), y = -23.5, label = lb1ab, parse = T, size = 3.0) +
annotate("text", x = as.POSIXct('2016-03-25 08:04:00'), y = -29, label = lb1a2, parse = T, size = 3.0) +
geom_segment(aes(x = as.POSIXct('2016-03-25 08:04:00'), y = -29.8,
xend = as.POSIXct('2016-03-25 08:04:00'), yend = -31.0),
arrow = arrow(length = unit(0.2, "cm"))) +
annotate("text", x = as.POSIXct('2016-04-03 00:04:00'), y = -29, label = lb1a2, parse = T, size = 3.0) +
geom_segment(aes(x = as.POSIXct('2016-04-03 00:04:00'), y = -29.8,
xend = as.POSIXct('2016-04-05 08:04:00'), yend = -31.0),
arrow = arrow(length = unit(0.2, "cm"))) +
annotate("text", x = as.POSIXct('2016-04-13 08:04:00'), y = -25, label = lb1a2, parse = T, size = 3.0) +
geom_segment(aes(x = as.POSIXct('2016-04-13 08:04:00'), y = -26,
xend = as.POSIXct('2016-04-13 08:04:00'), yend = -31.0),
arrow = arrow(length = unit(0.2, "cm"))) +
annotate("text", x = as.POSIXct('2016-05-26 08:04:00'), y = -29, label = lb1a2, parse = T, size = 3.0) +
geom_segment(aes(x = as.POSIXct('2016-05-26 08:04:00'), y = -29.8,
xend = as.POSIXct('2016-05-25 08:04:00'), yend = -31.0),
arrow = arrow(length = unit(0.2, "cm"))) +
#scale_x_continuous(breaks=seq(0,11,1)) +
scale_x_datetime(breaks = date_breaks("2 weeks"), labels = date_format("%b %d")) +
#annotate("text", x = as.POSIXct('2016-05-30 20:04:00'), y = -30.5, label = lb1a, parse = T, size = 2.0) +
theme(legend.position = "top")
# isCo
# Linear model (LM)
# ggsave(isCo, filename = "CompositeIsotopesLM.png", width = 7, height = 5, units = "in", scale = 1)
# No linear model
# ggsave(isCo, filename = "CompositeIsotopes.png", width = 7, height = 5, units = "in", scale = 1)
# View(weeklySoil)
# Ommitted, graph is tautological.
### Delta vs. f (Soils)
soilf = ggplot(weeklySoil, aes(x=f.comp, y=DD13C.comp, colour=Transect, group = Transect)) +
#geom_errorbar(limits_dCsoil, width=.05) +
geom_point() +
theme_bw() +
stat_smooth(method = "lm", formula = y ~ poly(x, 2)) +
#stat_smooth(method = "lm") +
facet_wrap(~Transect, nrow = 3) +
scale_x_reverse() +
xlab("Fraction remaining (f)") +
theme(axis.text.x=element_text(angle = 45, hjust = 1)) +
#ylab(expression(paste({delta}^"13","C", ' \211'))) +
ylab(expression(paste({Delta~delta}^"13","C", ' (\u2030)'))) +
#scale_y_continuous(breaks=seq(-34,-21,2)) +
theme(legend.position = "top") +
#geom_text_repel(aes(label=WeekNo, color = factor(Transect)),
#arrow = arrow(length = unit(0.005, 'npc'), type = "closed"),
#force = 1,
#point.padding = unit(1.0, 'lines'),
#max.iter = 2e3,
#nudge_x = .2) +
geom_point()
# soilf
###############################
###############################
###############################
### DeltaDelta vs time
###############################
# View(weeklySoil)
# limits_DdCsoil <- aes(ymin=comp.d13C-comp.d13C.SD-initialDelta, ymax=comp.d13C+comp.d13C.SD-initialDelta)
limits_DdCsoil <- aes(ymin=comp.d13C-comp.d13C.SE-initialDelta, ymax=comp.d13C+comp.d13C.SE-initialDelta)
# pd <- position_dodge(0.5)
# AOdf[1:27,]
deltaTime = ggplot(weeklySoil[1:48, ], aes(x=Date.ti, y=DD13C.comp, colour=Transect, group = Transect)) +
geom_errorbar(limits_DdCsoil, width=.5) +
geom_point() +
# Themes and axes
theme_bw() +
theme(legend.position="right",
axis.title.x = element_blank(),
# axis.text.x=element_text(angle = 45, hjust = 1),
axis.text.x= element_blank()) +
xlab("Date") +
scale_x_datetime(breaks = date_breaks("2 weeks"), labels = date_format("%b %d")) +
ylab(expression(paste({Delta~delta}^"13","C", ' (\u2030)'))) +
scale_y_continuous(breaks=seq(0, 8, 1)) +
# ylab(expression(paste({delta}^"13","C", ' \211'))) +
# ylab(expression(paste({delta}^"13","C", ' (\u2030)'))) +
# facet_wrap(~Transect, nrow = 3) +
# Smooth linear models
stat_smooth(method = "lm", se=FALSE) +
#stat_smooth(method = "lm", formula = y ~ poly(x, 2)) +
# Text
# Application W0
annotate("text",
x = as.POSIXct('2016-04-04 01:04:00'), y = 6, label = lbW012, parse = T, size = 3.0) +
geom_segment(aes(x = as.POSIXct('2016-04-03 08:04:00'), y = 5.5,
xend = as.POSIXct('2016-03-25 22:04:00'), yend = -0), color = "black",
arrow = arrow(length = unit(0.2, "cm"))) +
#annotate("text",
#         x = as.POSIXct('2016-04-03 00:04:00'), y = 2, label = lb1a2, parse = T, size = 3.0) +
# Application W1
geom_segment(aes(x = as.POSIXct('2016-04-03 08:04:00'), y = 5.5,
xend = as.POSIXct('2016-04-05 08:04:00'), yend = 0), color = "black",
arrow = arrow(length = unit(0.2, "cm"))) +
# annotate("text", x = as.POSIXct('2016-04-15 08:04:00'), y = 1, label = lb1a2, parse = T, size = 3.0) +
# Application W2
geom_segment(aes(x = as.POSIXct('2016-04-03 08:04:00'), y = 5.5,
xend = as.POSIXct('2016-04-13 08:04:00'), yend = 0), color = "black",
arrow = arrow(length = unit(0.2, "cm"))) +
# Application W9
annotate("text",
x = as.POSIXct('2016-06-10 08:04:00'), y = 1.8, label = lbW9, parse = T, size = 3.0) +
geom_segment(aes(x = as.POSIXct('2016-06-10 08:04:00'), y = 1.5,
xend = as.POSIXct('2016-05-25 18:04:00'), yend = 0), color = "black",
arrow = arrow(length = unit(0.2, "cm")))
deltaTime
soils = plot_grid(co, deltaTime, ncol = 1, nrow = 2, align = "v")
soils
lb1a2 <- paste("App.")
lb1b <- paste("(A)~epsilon:-1.5")
lb1b2 <- paste("(B)~epsilon:-2.0")
Bsoil =ggplot(weeklySoil)+
#geom_errorbar(limits_dCsoil, width=.05) +
#geom_point(aes(x=Date.ti, y=B.comp, colour=Transect, group = Transect)) +
geom_point(aes(x=Date.ti, y=B.min.comp, colour=Transect, group = Transect)) + #, color = "dodgerblue4"
theme_bw() +
# stat_smooth(method = "lm", formula = y ~ poly(x, 2)) +
#stat_smooth(aes(x=Date.ti, y=B.min.comp), method = "lm", se = F, color = "dodgerblue4") +
#stat_smooth(aes(x=Date.ti, y=B.comp), method = "lm", se = F, color = "grey40") +
# Individual / broken lines
#geom_smooth(data=subset(weeklySoil[10:27, ]), aes(x=Date.ti, y=B.min.comp), method = "lm", se = F, color = "dodgerblue4", linetype = "dashed") +
#geom_smooth(data=subset(weeklySoil[31:45, ]), aes(x=Date.ti, y=B.min.comp), method = "lm", se = F, color = "dodgerblue4", linetype = "dashed") +
#geom_smooth(data=subset(weeklySoil[10:27, ]), aes(x=Date.ti, y=B.comp), method = "lm", se = F, color = "grey40", linetype = "dashed") +
#geom_smooth(data=subset(weeklySoil[31:45, ]), aes(x=Date.ti, y=B.comp), method = "lm", se = F, color = "grey40", linetype = "dashed") +
# Continous lines
# geom_smooth(data=subset(weeklySoil[1:45, ]), aes(x=Date.ti, y=B.min.comp), method = "lm", formula = y ~ poly(x, 2)) +
# geom_smooth(y=B.min.comp, method = "lm", formula = y ~ poly(x, 2)) +
# facet_wrap(~Transect, nrow = 3) +
xlab("Date") +
theme(axis.text.x=element_text(angle = 45, hjust = 1)) +
#ylab(expression(paste({delta}^"13","C", ' \211'))) +
ylab("Degradation (%)") +
scale_y_continuous(breaks=seq(0, 100, 20)) +
#geom_hline(yintercept = -31.47, color = "dodgerblue4", linetype = "dotted") +
#geom_hline(yintercept = -30.97, color = "dodgerblue3", linetype = "dotted") +
#geom_hline(yintercept = -31.97, color = "dodgerblue3", linetype = "dotted") +
annotate("text", x = as.POSIXct('2016-04-11 20:04:00'), y = 100, label = lb1b, parse = T, size = 3.0, color = "grey40") +
annotate("text", x = as.POSIXct('2016-04-11 20:04:00'), y = 85, label = lb1b2, parse = T, size = 3.0, color = "dodgerblue4" ) +
annotate("text", x = as.POSIXct('2016-03-25 08:04:00'), y = 30, label = lb1a2, parse = T, size = 3.0) +
geom_segment(aes(x = as.POSIXct('2016-03-25 08:04:00'), y = 25,
xend = as.POSIXct('2016-03-25 08:04:00'), yend = 20),
arrow = arrow(length = unit(0.2, "cm"))) +
annotate("text", x = as.POSIXct('2016-04-03 00:04:00'), y = 30, label = lb1a2, parse = T, size = 3.0) +
geom_segment(aes(x = as.POSIXct('2016-04-03 00:04:00'), y = 25,
xend = as.POSIXct('2016-04-05 08:04:00'), yend = 20),
arrow = arrow(length = unit(0.2, "cm"))) +
annotate("text", x = as.POSIXct('2016-04-13 08:04:00'), y = 30, label = lb1a2, parse = T, size = 3.0) +
geom_segment(aes(x = as.POSIXct('2016-04-13 08:04:00'), y = 25,
xend = as.POSIXct('2016-04-13 08:04:00'), yend = 20),
arrow = arrow(length = unit(0.2, "cm"))) +
annotate("text", x = as.POSIXct('2016-05-26 08:04:00'), y = 30, label = lb1a2, parse = T, size = 3.0) +
geom_segment(aes(x = as.POSIXct('2016-05-26 08:04:00'), y = 25,
xend = as.POSIXct('2016-05-25 08:04:00'), yend = 20),
arrow = arrow(length = unit(0.2, "cm"))) +
scale_x_datetime(breaks = date_breaks("2 weeks"), labels = date_format("%b %d")) +
#scale_x_continuous(breaks=seq(0,11,1)) +
theme(legend.position = "top")
Bsoil
# Linear model
ggsave(Bsoil, filename = "CompositeDegradationLM.png", width = 7, height = 5, units = "in", scale = 1)
#deltaCo = plot_grid(co, isCo, ncol = 2, nrow = 1, align = "h")
# deltaCoBio = plot_grid(co, isCo, Bsoil, ncol = 3, nrow = 1, align = "h")
# deltaCoBio
# Linear model
#ggsave(deltaCo, filename = "CompositeConcLM.png", width = 6, height = 7, units = "in", scale = 1)
# ggsave(deltaCoBio, filename = "SoilConcDeltBio_LM.png", width = 11.69, height = 8.27, units = "in", scale = 1)
# No linear model
#ggsave(deltaCo, filename = "CompositeConc.png", width = 6, height = 7, units = "in", scale = 1)
# weeklySoil2 = weeklySoil[1:45, ]
# View(weeklySoil2)
Bsoil2 = ggplot(weeklySoil, aes(x=Date.ti, y=B.min.comp, colour=Transect, group = Transect)) +
geom_point() +
# geom_point(aes(x=Date.ti, y=B.comp, colour=Transect, group = Transect)) +
theme_bw() +
stat_smooth(method = "lm", formula = y ~ poly(x, 2), se=FALSE)
Bsoil2
AOdf = read.csv2("Data/WeeklyHydroContam_R.csv")
str(AOdf)
# Adding a Weeks column for labelling
AOdf$WeekSubWeek <- as.character(AOdf$WeekSubWeek)
Split <- strsplit(AOdf$WeekSubWeek, "-", fixed = TRUE)
AOdf$Weeks <- sapply(Split, "[", 1)
AOdf$WeekSubWeek <- factor(AOdf$WeekSubWeek, levels = unique(AOdf$WeekSubWeek))
AOdf$Weeks <- factor(AOdf$Weeks, levels = unique(AOdf$Weeks))
AOdf$ti <- as.POSIXct(strptime(AOdf$ti, "%Y-%m-%d %H:%M", tz="EST"))
sum(is.na(AOdf$ti))
# View(AOdf)
limits_conc <- aes(ymin=Conc.mug.L-Conc.SD, ymax=Conc.mug.L+Conc.SD, color = Weeks, group = Weeks)
conc1 <- ggplot(AOdf, aes(x=ti, y=Conc.mug.L)) +
geom_point( aes(color = Weeks, group = Weeks)) +
# Error bars
geom_errorbar(limits_conc, width=1) +
# Themes and axes
theme_bw() +
theme(axis.text.x=element_text(angle = 45, hjust = 1),
# axis.text.x=element_blank(),
# axis.title.x=element_blank(),
legend.position="none")+
guides(col = guide_legend(ncol = 1)) +  # Sets legend parameters
xlab("Date") +
scale_x_datetime(breaks = date_breaks("2 weeks"), labels = date_format("%b %d")) +
ylab(expression(paste("Conc. S-Meto.  ", {({mu}*g / L)}))) +
scale_y_continuous(breaks = c(18,16,14,12,10, 8, 6, 4, 2, 0), limits = c(-1, 18) ) +
# Smooth linear models
geom_smooth(data=subset(AOdf[4:27, ]), method = "lm", formula = y ~ poly(x, 2)) +
geom_smooth(data=subset(AOdf[28:length(AOdf), ]), method = "lm", formula = y ~ poly(x, 2)) +
# Text
# Application W9
annotate("text",
x = as.POSIXct('2016-06-10 08:04:00'), y = -1, label = lbW9, parse = T, size = 3.0) +
geom_segment(aes(x = as.POSIXct('2016-06-05 08:04:00'), y = -1,
xend = as.POSIXct('2016-05-25 18:04:00'), yend = -0.9), color = "black",
arrow = arrow(length = unit(0.2, "cm"))) +
geom_text_repel(aes(label=WeekSubWeek, color = factor(Weeks)),
size = 3,
arrow = arrow(length = unit(0.005, 'npc'), type = "closed"),
force = 0.5,
point.padding = unit(0.5, 'lines'),
max.iter = 2e3,
nudge_x = .05)
conc1
pos <- position_dodge(0.5)
# conc_lb1 <- paste("App.1")
limits_conc <- aes(ymin=Conc.mug.L-Conc.SD, ymax=Conc.mug.L+Conc.SD, color = Weeks, group = Weeks)
conc1half <- ggplot(AOdf[1:27,], aes(x=ti, y=Conc.mug.L)) +
geom_point( aes(color = Weeks, group = Weeks)) +
# Errror bars
#geom_errorbar(aes(ymin=mean.d13C-SD.d13C, ymax=mean.d13C+SD.d13C), width=.1) +
geom_errorbar(limits_conc, width=1) +
# Themes & axes
#theme_gray() +
theme_bw() +
theme(axis.text.x=element_text(angle = 45, hjust = 1),
plot.margin = unit(c(0,0.5,0,0), "lines")) +
#theme(axis.text.x = element_blank()) +
scale_x_datetime(breaks = date_breaks("week"), labels = date_format("%m/%d")) +
xlab("Date") +
ylab(expression(paste("Conc. S-Meto.  ", {({mu}*g / L)}))) +
theme(legend.position = "top") +
theme(legend.title = element_blank()) +
scale_y_continuous(breaks = c(20,15,10,5, 0), limits = c(-5, 20) ) +
# Smooth linear models
geom_smooth(data=subset(AOdf[4:27, ]), method = "lm", formula = y ~ poly(x, 2)) +
#stat_smooth(method = "lm", formula = y ~ poly(x, 2)) +
#geom_hline(yintercept = -31.21, color = "dodgerblue4", linetype = "dotted") +
#geom_hline(yintercept = -30.71, color = "dodgerblue3", linetype = "dotted") +
#geom_hline(yintercept = -31.71, color = "dodgerblue3", linetype = "dotted") +
# Text
annotate("text", x = as.POSIXct('2016-03-26 23:34:00'), y = -3, label = "conc_lb1", parse = T) +
annotate("text", x = as.POSIXct('2016-04-06 20:04:00'), y = -3, label = "App.2", parse = T) +
annotate("text", x = as.POSIXct('2016-04-17 05:04:00'), y = -3, label = "App.3", parse = T) +
geom_segment(aes(x = as.POSIXct('2016-03-25 08:04:00'), y = -4,
xend = as.POSIXct('2016-03-25 08:04:00'), yend = -5.0),
arrow = arrow(length = unit(0.2, "cm"))) +
geom_segment(aes(x = as.POSIXct('2016-04-05 08:04:00'), y = -4,
xend = as.POSIXct('2016-04-05 08:04:00'), yend = -5.0),
arrow = arrow(length = unit(0.2, "cm"))) +
geom_segment(aes(x = as.POSIXct('2016-04-13 08:04:00'), y = -4,
xend = as.POSIXct('2016-04-13 08:04:00'), yend = -5.0),
arrow = arrow(length = unit(0.2, "cm"))) +
geom_text_repel(aes(label=Weeks, color = factor(Weeks)),
size = 3,
arrow = arrow(length = unit(0.005, 'npc'), type = "closed"),
force = 0.5,
point.padding = unit(0.5, 'lines'),
max.iter = 2e3,
nudge_x = .05)
conc2 <- ggplot(AOdf[28:length(AOdf),], aes(x=ti, y=Conc.mug.L)) +
geom_point( aes(color = Weeks, group = Weeks)) +
# Error bars
# geom_errorbar(aes(ymin=mean.d13C-SD.d13C, ymax=mean.d13C+SD.d13C), width=.1) +
geom_errorbar(limits_conc, width=1) +
# Themes & axes
# theme_gray() +
theme_bw() +
theme(legend.position = "none") +
theme(axis.text.x=element_text(angle = 45, hjust = 1),
axis.text.y = element_blank(),
legend.title = element_blank(),
plot.margin = unit(c(0,3.5,0,0), "lines")) +
#scale_x_datetime(breaks = date_breaks("week"), labels = date_format("%m/%d")) +
scale_y_continuous(breaks = c(20,15,10,5,0), limits = c(-5, 20) ) +
xlab("Date") +
ylab("") +
# Smooth linear models
stat_smooth(method = "lm", formula = y ~ poly(x, 2)) +
#geom_hline(yintercept = -31.21, color = "dodgerblue4", linetype = "dotted") +
#geom_hline(yintercept = -30.71, color = "dodgerblue3", linetype = "dotted") +
#geom_hline(yintercept = -31.71, color = "dodgerblue3", linetype = "dotted") +
# Text
#annotate("text", x = as.POSIXct('2016-06-25 00:04:00'), y = -31.2, label = lb1, parse = T) +
annotate("text", x = as.POSIXct('2016-05-27 08:04:00'), y = -3, label = "App.4", parse = T) +
geom_segment(aes(x = as.POSIXct('2016-05-26 08:04:00'), y = -4,
xend = as.POSIXct('2016-05-26 08:04:00'), yend = -5.0),
arrow = arrow(length = unit(0.2, "cm"))) +
geom_text_repel(aes(label=Weeks, color = factor(Weeks)),
size = 3,
arrow = arrow(length = unit(0.005, 'npc'), type = "closed"),
force = 0.5,
point.padding = unit(0.5, 'lines'),
max.iter = 2e3,
nudge_x = .05)
#concs = plot_grid(conc1, conc2, ncol = 2, nrow = 1, align = "h")
#concs
AOdf$SD.d13C.err  <- ifelse(is.na(AOdf$SD.d13C), 0.5, AOdf$SD.d13C)
# limits_dC <- aes(ymin=diss.d13C-SD.d13C.err, ymax=diss.d13C+SD.d13C.err, color = Weeks, group = Weeks)
limits_dC <- aes(ymin=diss.d13C-SD.d13C, ymax=diss.d13C+SD.d13C, color = Weeks, group = Weeks)
# View(AOdf)
iso <- ggplot(AOdf, aes(x=ti, y=diss.d13C)) +
#geom_errorbar(aes(ymin=mean.d13C-SD.d13C, ymax=mean.d13C+SD.d13C), width=.1) +
geom_errorbar(limits_dC, width=1) +
#theme_gray() +
theme_bw() +
theme(axis.text.x=element_text(angle = 45, hjust = 1)) +
#scale_x_datetime(breaks = date_breaks("week"), labels = date_format("%m/%d")) +
geom_point( aes(color = Weeks, group = Weeks)) +
#stat_smooth(method = "lm", formula = y ~ x) +
geom_smooth(data=subset(AOdf[4:length(AOdf), ]), method = "lm", formula = y ~ poly(x, 2)) +
#stat_smooth(method = "lm", formula = y ~ poly(x, 2)) +
#theme(axis.text.x = element_blank()) +
#theme(plot.margin = unit(c(1,1,1,1), "lines")) +
geom_hline(yintercept = -31.21, color = "dodgerblue4", linetype = "dotted") +
geom_hline(yintercept = -30.71, color = "dodgerblue3", linetype = "dotted") +
geom_hline(yintercept = -31.71, color = "dodgerblue3", linetype = "dotted") +
#annotate("text", x = as.POSIXct('2016-06-25 00:04:00'), y = -31.2, label = lb1, parse = T) +
xlab("Date") +
#theme(legend.position="top") +
scale_y_continuous(breaks = c(-32,-31,-30,-29, -28, -27), limits = c(-32, -26.4) ) +
ylab(expression(paste({delta}^"13","C", ' (\u2030)'))) +
geom_text_repel(aes(label=WeekSubWeek, color = factor(Weeks)),
size = 3,
arrow = arrow(length = unit(0.005, 'npc'), type = "closed"),
force = 0.5,
point.padding = unit(0.5, 'lines'),
max.iter = 2e3,
nudge_x = .05)
#ylab(expression(paste({delta}^"13","C", ' \211')))
#ylab(expression(paste({delta}^"13","C")))
iso
ggsave(iso, filename = "Outlet_Delta_ti_cont.png", width = 8, height = 5, units = "in", scale = 1)
# DeltaDelta Water
#limits_DdCwater <- aes(ymin=diss.d13C-SD.d13C-initialDelta, ymax=diss.d13C+SD.d13C-initialDelta, color = Weeks, group = Weeks)
limits_DdCwater <- aes(ymin=diss.d13C-se.d13C-initialDelta, ymax=diss.d13C+se.d13C-initialDelta, color = Weeks, group = Weeks)
iso2 <- ggplot(AOdf, aes(x=ti, y=DD13C.diss)) +
# Error bars
# geom_errorbar(aes(ymin=mean.d13C-SD.d13C, ymax=mean.d13C+SD.d13C), width=.1) +
geom_errorbar(limits_DdCwater, width=1) +
# Themes and Axes
# theme_gray() +
# theme(axis.text.x = element_blank()) +
# theme(plot.margin = unit(c(1,1,1,1), "lines")) +
theme_bw() +
theme(legend.position="right",
axis.text.x=element_text(angle = 45, hjust = 1)) +
xlab("Date") +
scale_x_datetime(breaks = date_breaks("2 weeks"), labels = date_format("%b %d")) +
# scale_y_continuous(breaks = c(-32,-31,-30,-29, -28, -27), limits = c(-32, -26.4) ) +
# scale_y_continuous(breaks = c(6, 4, 2, 0), limits = c(-1, 6) ) +
scale_y_continuous(breaks=seq(0, 6, 1)) +
ylab(expression(paste({Delta}, {delta}^"13","C", ' (\u2030)'))) +
#scale_x_datetime(breaks = date_breaks("week"), labels = date_format("%m/%d")) +
geom_point( aes(color = Weeks, group = Weeks)) +
# Smooth linear models
# stat_smooth(method = "lm", formula = y ~ x) +
# geom_smooth(data=subset(AOdf[4:length(AOdf), ]), method = "lm", formula = y ~ poly(x, 2)) +
geom_smooth(data=subset(AOdf[4:26, ]), method = "lm", formula = y~x) +
geom_smooth(data=subset(AOdf[27:length(AOdf), ]), method = "lm", formula = y ~ x) +
# Text
annotate("text",
x = as.POSIXct('2016-06-10 08:04:00'), y = 0.3, label = lbW9, parse = T, size = 3.0) +
geom_segment(aes(x = as.POSIXct('2016-06-05 08:04:00'), y = 0.2,
xend = as.POSIXct('2016-05-25 18:04:00'), yend = 0), color = "black",
arrow = arrow(length = unit(0.2, "cm"))) +
# annotate("text", x = as.POSIXct('2016-06-25 00:04:00'), y = -31.2, label = lb1, parse = T) +
geom_text_repel(aes(label=WeekSubWeek, color = factor(Weeks)),
size = 3,
arrow = arrow(length = unit(0.005, 'npc'), type = "closed"),
force = 0.5,
point.padding = unit(0.5, 'lines'),
max.iter = 2e3,
nudge_x = .05)
#ylab(expression(paste({delta}^"13","C", ' \211')))
#ylab(expression(paste({delta}^"13","C")))
iso2
concIsoWater = plot_grid(conc1, iso2, ncol = 1, nrow = 2, align = "v")
concIsoWater
# plot_grid(co, deltaTime, ncol = 1, nrow = 2, align = "v")
legend_weeks = get_legend(deltaTime + theme(legend.position = "bottom"))
allgrid = plot_grid(co, deltaTime, conc1, iso2, lengend_weeks, ncol =2, nrow = 2)
legend_weeks = get_legend(deltaTime + theme(legend.position = "bottom"))
allgrid = plot_grid(co, deltaTime, conc1, iso2, lengend_weeks, ncol =2, nrow = 2)
allgrid = plot_grid(co, deltaTime, conc1, iso2, legend_weeks, ncol =2, nrow = 2)
allgrid
allgrid = plot_grid(co, deltaTime + theme(legend.position = "none"), conc1, iso2, ncol =2, nrow = 2)
allgrid
allgrid = plot_grid(co, deltaTime + theme(legend.position = "none"), conc1, iso2 + theme(legend.position = "none"), ncol =2, nrow = 2)
allgrid
plot_grid(co, deltaTime + theme(legend.position = "none"), conc1, iso2 + theme(legend.position = "none"),
ncol =2, nrow = 2,
labels = c("A", "B", "C", "D"))
legend_soils = get_legend(deltaTime)
plot_grid(allgrid, legend_soils)
legend_soils = get_legend(deltaTime + theme(legend.position="bottom"))
plot_grid(allgrid, legend_soils)
plot_grid(allgrid, legend_soils, ncol = 1, rel_heights = c(1, .2))
newgrid = plot_grid(allgrid, legend_soils, legend_soils, ncol = 2, rel_heights = c(1, .2))
plot_grid(allgrid, legend_soils, legend_soils, ncol = 2, rel_heights = c(1, .2))
plot_grid(allgrid, legend_soils, legend_soils, ncol = 1, rel_heights = c(1, .2))
plot_grid(allgrid, legend_soils, legend_soils, ncol = 1)
legend_water = get_legend(iso2 + theme(legend.position = "bottom"))
newgrid = plot_grid(allgrid, legend_soils, legend_water, ncol = 1, rel_heights = c(1, .2))
newgrid
plot_grid(allgrid, legend_soils, legend_water, ncol = 1, rel_heights = c(.5, .2))
plot_grid(allgrid, legend_soils, legend_water, ncol = 2, rel_heights = c(.5, .2))
plot_grid(allgrid, legend_soils, legend_water, ncol = 1, rel_heights = c(1, .2))
AOdf$SD.d13C.err  <- ifelse(is.na(AOdf$SD.d13C), 0.5, AOdf$SD.d13C)
# limits_dC <- aes(ymin=diss.d13C-SD.d13C.err, ymax=diss.d13C+SD.d13C.err, color = Weeks, group = Weeks)
limits_dC <- aes(ymin=diss.d13C-SD.d13C, ymax=diss.d13C+SD.d13C, color = Weeks, group = Weeks)
# View(AOdf)
iso <- ggplot(AOdf, aes(x=ti, y=diss.d13C)) +
#geom_errorbar(aes(ymin=mean.d13C-SD.d13C, ymax=mean.d13C+SD.d13C), width=.1) +
geom_errorbar(limits_dC, width=1) +
#theme_gray() +
theme_bw() +
theme(axis.text.x=element_text(angle = 45, hjust = 1)) +
#scale_x_datetime(breaks = date_breaks("week"), labels = date_format("%m/%d")) +
geom_point( aes(color = Weeks, group = Weeks)) +
#stat_smooth(method = "lm", formula = y ~ x) +
geom_smooth(data=subset(AOdf[4:length(AOdf), ]), method = "lm", formula = y ~ poly(x, 2)) +
#stat_smooth(method = "lm", formula = y ~ poly(x, 2)) +
#theme(axis.text.x = element_blank()) +
#theme(plot.margin = unit(c(1,1,1,1), "lines")) +
geom_hline(yintercept = -31.21, color = "dodgerblue4", linetype = "dotted") +
geom_hline(yintercept = -30.71, color = "dodgerblue3", linetype = "dotted") +
geom_hline(yintercept = -31.71, color = "dodgerblue3", linetype = "dotted") +
#annotate("text", x = as.POSIXct('2016-06-25 00:04:00'), y = -31.2, label = lb1, parse = T) +
xlab("Date") +
#theme(legend.position="top") +
scale_y_continuous(breaks = c(-32,-31,-30,-29, -28, -27), limits = c(-32, -26.4) ) +
ylab(expression(paste({delta}^"13","C", ' (\u2030)'))) +
geom_text_repel(aes(label=WeekSubWeek, color = factor(Weeks)),
size = 3,
arrow = arrow(length = unit(0.005, 'npc'), type = "closed"),
force = 0.5,
point.padding = unit(0.5, 'lines'),
max.iter = 2e3,
nudge_x = .05)
#ylab(expression(paste({delta}^"13","C", ' \211')))
#ylab(expression(paste({delta}^"13","C")))
iso
ggsave(iso, filename = "Outlet_Delta_ti_cont.png", width = 8, height = 5, units = "in", scale = 1)
# DeltaDelta Water
#limits_DdCwater <- aes(ymin=diss.d13C-SD.d13C-initialDelta, ymax=diss.d13C+SD.d13C-initialDelta, color = Weeks, group = Weeks)
limits_DdCwater <- aes(ymin=diss.d13C-se.d13C-initialDelta, ymax=diss.d13C+se.d13C-initialDelta, color = Weeks, group = Weeks)
iso2 <- ggplot(AOdf, aes(x=ti, y=DD13C.diss)) +
# Error bars
# geom_errorbar(aes(ymin=mean.d13C-SD.d13C, ymax=mean.d13C+SD.d13C), width=.1) +
geom_errorbar(limits_DdCwater, width=1) +
# Themes and Axes
# theme_gray() +
# theme(axis.text.x = element_blank()) +
# theme(plot.margin = unit(c(1,1,1,1), "lines")) +
theme_bw() +
theme(legend.position="right",
axis.text.x=element_text(angle = 45, hjust = 1)) +
xlab("Date") +
scale_x_datetime(breaks = date_breaks("2 weeks"), labels = date_format("%b %d")) +
# scale_y_continuous(breaks = c(-32,-31,-30,-29, -28, -27), limits = c(-32, -26.4) ) +
# scale_y_continuous(breaks = c(6, 4, 2, 0), limits = c(-1, 6) ) +
scale_y_continuous(breaks=seq(0, 6, 1)) +
ylab(expression(paste({Delta}, {delta}^"13","C", ' (\u2030)'))) +
#scale_x_datetime(breaks = date_breaks("week"), labels = date_format("%m/%d")) +
geom_point( aes(color = Weeks, group = Weeks)) +
# Smooth linear models
# stat_smooth(method = "lm", formula = y ~ x) +
# geom_smooth(data=subset(AOdf[4:length(AOdf), ]), method = "lm", formula = y ~ poly(x, 2)) +
geom_smooth(data=subset(AOdf[4:26, ]), method = "lm", formula = y~x) +
geom_smooth(data=subset(AOdf[27:length(AOdf), ]), method = "lm", formula = y ~ x) +
# Text
annotate("text",
x = as.POSIXct('2016-06-10 08:04:00'), y = 0.3, label = lbW9, parse = T, size = 3.0) +
geom_segment(aes(x = as.POSIXct('2016-06-05 08:04:00'), y = 0.2,
xend = as.POSIXct('2016-05-25 18:04:00'), yend = 0), color = "black",
arrow = arrow(length = unit(0.2, "cm"))) +
# annotate("text", x = as.POSIXct('2016-06-25 00:04:00'), y = -31.2, label = lb1, parse = T) +
geom_text_repel(aes(label=WeekSubWeek, color = factor(Weeks)),
size = 3,
arrow = arrow(length = unit(0.005, 'npc'), type = "closed"),
force = 0.5,
point.padding = unit(0.5, 'lines'),
max.iter = 2e3,
nudge_x = .05)
#ylab(expression(paste({delta}^"13","C", ' \211')))
#ylab(expression(paste({delta}^"13","C")))
iso2
concIsoWater = plot_grid(conc1, iso2, ncol = 1, nrow = 2, align = "v")
concIsoWater
# plot_grid(co, deltaTime, ncol = 1, nrow = 2, align = "v")
legend_weeks = get_legend(deltaTime + theme(legend.position = "bottom"))
allgrid = plot_grid(co, deltaTime + theme(legend.position = "none"), conc1, iso2 + theme(legend.position = "none"),
ncol =2, nrow = 2,
labels = c("A", "B", "C", "D"))
legend_soils = get_legend(deltaTime + theme(legend.position="bottom"))
legend_water = get_legend(iso2 + theme(legend.position = "bottom") )
newgrid = plot_grid(allgrid, legend_soils, legend_water, ncol = 1, rel_heights = c(1, .2))
newgrid
